AWSTemplateFormatVersion: 2010-09-09
Description: Template CF para a custom IAM - roles-cf-us-east-1-340623154105-sandbox-dlh

#Metadata: 

Parameters: 
  pExportSecretStackName:
    #Default: rds-cf-us-east-1-340623154105-sandbox-dlh
    Description: The ARN of the Secrets Manager secret for PostgreSQL instance
    Type: String      

  pEnv:
    Default: sandbox
    Description: The custom Env to stack
    Type: String

  pSolution:
    Default: dlh
    Description: The custom Env to stack
    Type: String  
    
# Mappings: 

# Conditions: 

Resources: 
  rDMSVpcRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: dms-vpc-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - dms.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole'

  rDMSCloudWatchLogsRole:
    Type: AWS::IAM::Role
    Properties:  
      RoleName: dms-cloudwatch-logs-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - dms.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole'

  rOpeninDMSS3Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: openin-dms-s3-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - dms.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonRDSFullAccess'          

  rEcsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ecsTaskExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: 
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'

  rEcsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${rEcsRole}-custom
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource: !Sub 'arn:aws:s3:::aws-config-${AWS::Region}-${AWS::AccountId}-${pEnv}-${pSolution}/commercial/sales/ecs.env'
          - Effect: Allow
            Action: 
              - s3:GetBucketLocation
            Resource: !Sub 'arn:aws:s3:::aws-config-${AWS::Region}-${AWS::AccountId}-${pEnv}-${pSolution}'
      Roles: 
        - !Ref rEcsRole

  rOpeninSecretPostgreSQLRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: openin-secret-postgresql-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
              - dms.amazonaws.com
            Action: 
            - sts:AssumeRole
      Policies:
        - PolicyName: openin-dms-secretsmanager-accesspolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !ImportValue
                  'Fn::Sub': '${pExportSecretStackName}-oSecretARN'    

  IAMManagedPolicyScheduler:
      Type: AWS::IAM::ManagedPolicy
      Properties:
          ManagedPolicyName: sch_hop_container_main_main_dwh_sales_workflow_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: ecs:RunTask
                Resource: "*"
              - Effect: Allow
                Action: iam:PassRole
                Resource: "*"

  IAMRoleScheduler:
      Type: AWS::IAM::Role
      Properties:
          RoleName: sch_hop_container_main_main_dwh_sales_workflow_role
          AssumeRolePolicyDocument: 
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Principal:
                  Service: scheduler.amazonaws.com
                Action: sts:AssumeRole
          ManagedPolicyArns: 
            - !Ref IAMManagedPolicyScheduler

Outputs:
  oDMSS3Role:
    Value: !GetAtt rOpeninDMSS3Role.Arn
    Description: Role Arn to use in DMS with S3  
    Export:
      Name: !Sub ${AWS::StackName}-oDMSS3Role

  oSecretPostgreSQLRole:
    Value: !GetAtt rOpeninSecretPostgreSQLRole.Arn
    Description: Role Arn to use in DMS  
    Export:
      Name: !Sub ${AWS::StackName}-oSecretPostgreSQLRole
      # ARN da Role para ser usado com o DMS   

  oIAMRoleScheduler:
    Value: !GetAtt IAMRoleScheduler.Arn
    Description: Role Arn to use in EventBridge
    Export:
      Name: !Sub ${AWS::StackName}-oIAMRoleScheduler
      # ARN da Role para ser usado com o EventBridge      